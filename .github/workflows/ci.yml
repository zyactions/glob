name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-fs:
    name: Test (in = fs, os = ${{ matrix.platform }}, sub = ${{ matrix.subdirectory }}, pipe = ${{ matrix.return-pipe }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform    : [ubuntu-latest, macos-latest, windows-latest]
        subdirectory: [false, true]
        return-pipe : [false, true]
    env:
      PATTERN: ${{ matrix.subdirectory && '[ac].txt' || 'test/[ac].txt' }}
      WORKDIR: ${{ matrix.subdirectory && 'test' || '' }}
      EXPECTED: >-
        ${{
          matrix.subdirectory && '''a.txt'' ''c.txt''' ||
          (
            matrix.platform == 'windows-latest' && '''test\a.txt'' ''test\c.txt''' || '''test/a.txt'' ''test/c.txt'''
          )
        }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: TEST
        id: glob
        uses: ./.github/actions/wrapper
        with:
          working-directory: ${{ env.WORKDIR }}
          pattern: ${{ env.PATTERN }}
          return-pipe: ${{ matrix.return-pipe }}

      - name: FAILED
        if: matrix.return-pipe == false && steps.glob.outputs.matches != env.EXPECTED
        run: |
          echo "Matches:"
          echo "${{ steps.glob.outputs.matches }}"
          exit 1

      - name: Evaluate
        if: matrix.return-pipe
        id: glob-result
        shell: bash
        run: |
          result=$(${{ steps.glob.outputs.pipe }})
          echo "matches<<EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: FAILED
        if: matrix.return-pipe && steps.glob-result.outputs.matches != env.EXPECTED
        run: |
          echo "Matches:"
          echo "${{ steps.glob-result.outputs.matches }}"
          exit 1

  test-values:
    name: Test (in = values, os = ${{ matrix.platform }}, pipe = ${{ matrix.return-pipe }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform    : [ubuntu-latest, macos-latest, windows-latest]
        return-pipe : [false, true]
    env:
      PATTERN: 'test/[ac].txt'
      EXPECTED: "'test/a.txt' 'test/c.txt'"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: TEST
        id: glob
        uses: ./.github/actions/wrapper
        with:
          pattern: ${{ env.PATTERN }}
          values: |-
            test/a.txt
            test/b.txt
            test/c.txt
          return-pipe: ${{ matrix.return-pipe }}
      - name: FAILED
        if: matrix.return-pipe == false && steps.glob.outputs.matches != env.EXPECTED
        run: |
          echo "Matches:"
          echo "${{ steps.glob.outputs.matches }}"
          exit 1

      - name: Evaluate
        if: matrix.return-pipe
        id: glob-result
        shell: bash
        run: |
          result=$(${{ steps.glob.outputs.pipe }})
          echo "matches<<EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: FAILED
        if: matrix.return-pipe && steps.glob-result.outputs.matches != env.EXPECTED
        run: |
          echo "Matches:"
          echo "${{ steps.glob-result.outputs.matches }}"
          exit 1

  test-pipe:
    name: Test (in = pipe, os = ${{ matrix.platform }}, sub = ${{ matrix.subdirectory }}, pipe = ${{ matrix.return-pipe }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform    : [ubuntu-latest, macos-latest, windows-latest]
        subdirectory: [false, true]
        return-pipe : [false, true]
    env:
      PATTERN: 'test/[acdf].txt'
      WORKDIR: ${{ matrix.subdirectory && 'test/sub' || '' }}
      EXPECTED: ${{ matrix.subdirectory && '''test/d.txt'' ''test/f.txt''' || '''test/a.txt'' ''test/c.txt''' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: TEST
        id: glob
        uses: ./.github/actions/wrapper
        with:
          working-directory: ${{ env.WORKDIR }}
          pattern: ${{ env.PATTERN }}
          pipe: >-
            ls -1d test/*
          return-pipe: ${{ matrix.return-pipe }}
      - name: FAILED
        if: matrix.return-pipe == false && steps.glob.outputs.matches != env.EXPECTED
        run: |
          echo "Matches:"
          echo "${{ steps.glob.outputs.matches }}"
          exit 1

      - name: Evaluate
        if: matrix.return-pipe
        id: glob-result
        shell: bash
        run: |
          result=$(${{ steps.glob.outputs.pipe }})
          echo "matches<<EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: FAILED
        if: matrix.return-pipe && steps.glob-result.outputs.matches != env.EXPECTED
        run: |
          echo "Matches:"
          echo "${{ steps.glob-result.outputs.matches }}"
          exit 1

  results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Test Results
    needs: [test-fs, test-values, test-pipe]
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') ||  contains(needs.*.result, 'cancelled') }}
